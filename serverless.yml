service: aws-dynamodb-bottleneck-testing

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:GetShardIterator
        - dynamodb:PutItem
      Resource:
        - "${self:custom.table.arn}"
        - "${self:custom.table.index.arn}"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: { "Fn::Join": [":", ["arn:aws:lambda:${self:provider.region}", { "Ref": "AWS::AccountId" }, "function", "${self:custom.scheduleFunction}" ] ]  }

custom:
  table:
    arn: { "Fn::Join": [":", ["arn:aws:dynamodb:${self:provider.region}", { "Ref": "AWS::AccountId" }, "table/aws-dynamodb-bottleneck-testing" ] ]  }
    index:
      name: "status-date-index"
      arn: { "Fn::Join": [":", ["arn:aws:dynamodb:${self:provider.region}", { "Ref": "AWS::AccountId" }, "table/aws-dynamodb-bottleneck-testing/index/${self:custom.table.index.name}" ] ]  }
  scheduleFunction: "aws-dynamodb-bottleneck-testing-${self:provider.stage}-scheduler"
  pythonRequirements:
    pythonBin: python3

functions:
  eventLoader:
    handler: event_loader.handle
    environment:
      SCHEDULE_FUNCTION: "${self:custom.scheduleFunction}"
      INDEX_NAME: "${self:custom.table.index.name}"
    timeout: 120
  scheduler:
    handler: scheduler.handle

plugins:
  - serverless-python-requirements

package:
  exclude:
    - venv/**
    - node_modules/**
